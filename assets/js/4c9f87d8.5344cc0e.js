"use strict";(self.webpackChunkdocs_rancherdesktop_io=self.webpackChunkdocs_rancherdesktop_io||[]).push([[266],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),p=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),s=p(n),m=o,f=s["".concat(u,".").concat(m)]||s[m]||d[m]||a;return n?r.createElement(f,l(l({ref:t},c),{},{components:n})):r.createElement(f,l({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=s;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var p=2;p<a;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},8215:function(e,t,n){var r=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,o=e.className;return r.createElement("div",{role:"tabpanel",hidden:n,className:o},t)}},6396:function(e,t,n){n.d(t,{Z:function(){return s}});var r=n(7462),o=n(7294),a=n(2389),l=n(9443);var i=function(){var e=(0,o.useContext)(l.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},u=n(3616),p=n(6010),c="tabItem_vU9c";function d(e){var t,n,a,l=e.lazy,d=e.block,s=e.defaultValue,m=e.values,f=e.groupId,h=e.className,k=o.Children.map(e.children,(function(e){if((0,o.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=m?m:k.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),v=(0,u.lx)(b,(function(e,t){return e.value===t.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var g=null===s?s:null!=(t=null!=s?s:null==(n=k.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(a=k[0])?void 0:a.props.value;if(null!==g&&!b.some((function(e){return e.value===g})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+g+'" but none of its children has the corresponding value. Available values are: '+b.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var y=i(),x=y.tabGroupChoices,N=y.setTabGroupChoices,w=(0,o.useState)(g),T=w[0],E=w[1],O=[],j=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=f){var C=x[f];null!=C&&C!==T&&b.some((function(e){return e.value===C}))&&E(C)}var D=function(e){var t=e.currentTarget,n=O.indexOf(t),r=b[n].value;r!==T&&(j(t),E(r),null!=f&&N(f,r))},I=function(e){var t,n=null;switch(e.key){case"ArrowRight":var r=O.indexOf(e.currentTarget)+1;n=O[r]||O[0];break;case"ArrowLeft":var o=O.indexOf(e.currentTarget)-1;n=O[o]||O[O.length-1]}null==(t=n)||t.focus()};return o.createElement("div",{className:"tabs-container"},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,p.Z)("tabs",{"tabs--block":d},h)},b.map((function(e){var t=e.value,n=e.label,a=e.attributes;return o.createElement("li",(0,r.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:function(e){return O.push(e)},onKeyDown:I,onFocus:D,onClick:D},a,{className:(0,p.Z)("tabs__item",c,null==a?void 0:a.className,{"tabs__item--active":T===t})}),null!=n?n:t)}))),l?(0,o.cloneElement)(k.filter((function(e){return e.props.value===T}))[0],{className:"margin-vert--md"}):o.createElement("div",{className:"margin-vert--md"},k.map((function(e,t){return(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==T})}))))}function s(e){var t=(0,a.Z)();return o.createElement(d,(0,r.Z)({key:String(t)},e))}},8503:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return p},contentTitle:function(){return c},metadata:function(){return d},toc:function(){return s},default:function(){return f}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),l=n(6396),i=n(8215),u=["components"],p={title:"Hello World Example"},c=void 0,d={unversionedId:"tutorials/hello-world-example",id:"tutorials/hello-world-example",title:"Hello World Example",description:"This tutorial will demonstrate how to get started with Rancher Desktop by pushing an app to a local Kubernetes cluster.",source:"@site/docs/tutorials/hello-world-example.md",sourceDirName:"tutorials",slug:"/tutorials/hello-world-example",permalink:"/tutorials/hello-world-example",editUrl:"https://github.com/rancher-sandbox/docs.rancherdesktop.io/edit/main/docs/tutorials/hello-world-example.md",tags:[],version:"current",frontMatter:{title:"Hello World Example"},sidebar:"tutorialSidebar",previous:{title:"Features",permalink:"/getting-started/features"},next:{title:"Debugging a Container App with VS Code Docker extension",permalink:"/tutorials/vs-code-docker"}},s=[{value:"Hello World example",id:"hello-world-example",children:[],level:3},{value:"NGINX example",id:"nginx-example",children:[],level:3}],m={toc:s};function f(e){var t=e.components,n=(0,o.Z)(e,u);return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This tutorial will demonstrate how to get started with Rancher Desktop by pushing an app to a local Kubernetes cluster."),(0,a.kt)("p",null,"Rancher Desktop works with two container engines, ",(0,a.kt)("a",{parentName:"p",href:"https://containerd.io/"},(0,a.kt)("inlineCode",{parentName:"a"},"containerd"))," and ",(0,a.kt)("a",{parentName:"p",href:"https://mobyproject.org/"},"Moby"),", the open-sourced components of the Docker ecosystem. For ",(0,a.kt)("inlineCode",{parentName:"p"},"nerdctl"),", use the containerd runtime. For ",(0,a.kt)("inlineCode",{parentName:"p"},"docker"),", use the Moby (",(0,a.kt)("inlineCode",{parentName:"p"},"dockerd"),") runtime."),(0,a.kt)("h3",{id:"hello-world-example"},"Hello World example"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Create a folder:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"mkdir ../hello-world\ncd ../hello-world\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Create a Dockerfile with the command below."),' Make sure to specify your "USERNAME". For this example, USERNAME = john.'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'FROM alpine  \nCMD ["echo", "Hello, john!"]\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Build and run the image for verification purposes:")),(0,a.kt)(l.Z,{groupId:"container-runtime",mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"nerdctl",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"nerdctl build -t john/hello:1.0 .\nnerdctl images | grep john\nnerdctl run -d -p 8080:80 john/hello:1.0\n"))),(0,a.kt)(i.Z,{value:"docker",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"docker build -t john/hello:1.0 .\ndocker images | grep john\ndocker run -d -p 8080:80 john/hello:1.0\n")))),(0,a.kt)("h3",{id:"nginx-example"},"NGINX example"),(0,a.kt)("p",null,"Make sure that you switch the ",(0,a.kt)("inlineCode",{parentName:"p"},"container runtime")," setting in the ",(0,a.kt)("strong",{parentName:"p"},"Kubernetes Settings")," panel to either ",(0,a.kt)("inlineCode",{parentName:"p"},"dockerd")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"containerd")," as needed."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Create a folder as follows:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"mkdir ../nginx\ncd ../nginx\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Create a Dockerfile with the command below."),' Make sure to specify your "USERNAME". For this example, USERNAME = john.'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'FROM alpine  \nCMD ["echo", "Hello, john!"]\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Build and run the image for verification purposes:")),(0,a.kt)(l.Z,{groupId:"container-runtime",mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"nerdctl",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"nerdctl build -t john/nginx:1.0 .\nnerdctl images | grep john\nnerdctl run -d -p 8080:80 john/nginx:1.0\n"))),(0,a.kt)(i.Z,{value:"docker",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"docker build -t john/nginx:1.0 .\ndocker images | grep john\ndocker run -d -p 8080:80 john/nginx:1.0\n")))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Check your list of running containers:")),(0,a.kt)(l.Z,{groupId:"container-runtime",mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"nerdctl",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'nerdctl ps\nCONTAINER ID    IMAGE                          COMMAND                  CREATED        STATUS   PORTS   NAMES\nfd869b8e08c5    docker.io/john/nginx:1.0    "/docker-entrypoint.\u2026"   8 seconds ago     Up               nginx-fd869\n'))),(0,a.kt)(i.Z,{value:"docker",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'docker ps \nCONTAINER ID    IMAGE                          COMMAND                  CREATED        STATUS   PORTS   NAMES\nfd869b8e08c5    docker.io/john/nginx:1.0    "/docker-entrypoint.\u2026"      8 seconds ago  Up               nginx-fd869\n')))),(0,a.kt)("p",null,"Point your web browser to ",(0,a.kt)("inlineCode",{parentName:"p"},"localhost:8080"),", and you will see the nginx intro screen. If you prefer to stay on the command line, use ",(0,a.kt)("inlineCode",{parentName:"p"},"curl localhost:8080"),"."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"To shut down the container:")),(0,a.kt)(l.Z,{groupId:"container-runtime",mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"nerdctl",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"nerdctl stop <fd869b8e08c5>\nnerdctl ps #to verify nothing is running \n"))),(0,a.kt)(i.Z,{value:"docker",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"docker stop <fd869b8e08c5>\ndocker ps #to verify nothing is running \n")))))}f.isMDXComponent=!0}}]);